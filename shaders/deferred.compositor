compositor DeferredGBuffer {
    technique {
        texture mrt_output target_width target_height PF_FLOAT32_GR PF_FLOAT16_RGBA PF_FLOAT16_RGBA chain_scope

        target mrt_output {
            input none
            pass clear {}

            shadows off

            pass render_scene {
                first_render_queue 10
                last_render_queue 79
            }
        }
    }
}

compositor DeferredShading {
    technique {
        texture_ref mrt_output DeferredGBuffer mrt_output
        texture rt0 target_width target_height PF_FLOAT16_RGBA

        target rt0 {
            input none
            shadows off
            material_scheme Default

            pass clear {}

            pass render_scene {
                first_render_queue 1
                last_render_queue 9
            }

            pass render_custom DeferredLight {
                input 0 mrt_output 0
                input 1 mrt_output 1
                input 2 mrt_output 2
            }
        }

        target rt0 {
            input none
            shadows off
            material_scheme NoGBuffer

            pass render_scene {
                first_render_queue 10
                last_render_queue 79
            }
        }

        target rt0 {
            input none
            shadows off
            material_scheme Default

            pass render_scene {
                first_render_queue 80
            }
        }

        target_output {
            input none

            pass clear {}

            pass render_quad {
                material PostMaterial
                input 0 rt0
                input 1 mrt_output 0
            }
        }
    }
}

compositor DeferredShadingNormals {
    technique {
        texture_ref mrt_output DeferredGBuffer mrt_output

        target_output {
            input none

            pass render_quad {
                material DeferredShadingNormals
                input 0 mrt_output 0
                input 1 mrt_output 1
                input 2 mrt_output 2
            }
        }
    }
}